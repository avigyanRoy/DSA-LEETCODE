QUESTION:

Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.

 

Example 1:

Input: n = 2
Output: [0,1,1]
Explanation:
0 --> 0
1 --> 1
2 --> 10
Example 2:

Input: n = 5
Output: [0,1,1,2,1,2]
Explanation:
0 --> 0
1 --> 1
2 --> 10
3 --> 11
4 --> 100
5 --> 101
 

Constraints:

0 <= n <= 105

CODE SOLUTION:

class Solution {
public:
    vector<int> countBits(int n) {
        vector<int> ans;
        
        for(int i=0;i<=n;i++){
            int count=0;
            int k=i;
            while(k>0){
                int last_bit=k&1;
                if(last_bit){
                    count++;
                }
                k=k>>1;
            }
            ans.push_back(count);
        }
        return ans;
    }
};

PERFORMANCE:

Runtime: 19 ms, faster than 6.39% of C++ online submissions for Counting Bits.
Memory Usage: 8.6 MB, less than 21.39% of C++ online submissions for Counting Bits.
