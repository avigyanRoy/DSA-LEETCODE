QUESTION :

Given the head of a singly linked list, reverse the list, and return the reversed list.

 

Example 1:


Input: head = [1,2,3,4,5]
Output: [5,4,3,2,1]
Example 2:


Input: head = [1,2]
Output: [2,1]
Example 3:

Input: head = []
Output: []
 

Constraints:

The number of nodes in the list is the range [0, 5000].
-5000 <= Node.val <= 5000

CODE SOLUTION :

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* reverseList(struct ListNode* head){
    struct ListNode* p=head;
    struct ListNode* q;
    if(head==NULL){
        return NULL;
    }
    while(p->next!=NULL){
    q=p->next;
    p->next=q->next;
    q->next=head;
    head=q;
    }
    return head;
    
}

