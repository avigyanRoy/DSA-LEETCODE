QUESTION:

Given a string s, return the number of segments in the string.

A segment is defined to be a contiguous sequence of non-space characters.

 

Example 1:

Input: s = "Hello, my name is John"
Output: 5
Explanation: The five segments are ["Hello,", "my", "name", "is", "John"]
Example 2:

Input: s = "Hello"
Output: 1
 

Constraints:

0 <= s.length <= 300
s consists of lowercase and uppercase English letters, digits, or one of the following characters "!@#$%^&*()_+-=',.:".
The only space character in s is ' '.

CODE QUESTION:

class Solution {
public:
    int countSegments(string s) {
        int count=0;
        if(s==""){
            return 0;
        }
        
        int flag=0;
        for(int i=0;i<s.length();i++){
            if(s[i]!=' '){
                flag=1;
            }
        }
        if(flag==0){
            return 0;
        }
        for(int i=0;i<s.length();i++){
            if(s[i]==' ' && i>0){
                if(s[i-1]!=' ' ){ count++;}
               
            }
        }
        if(s[s.length()-1]==' '){
            return count;
        }
        return count+1;
    }
};

PERFORMANCE:

Runtime: 0 ms, faster than 100.00% of C++ online submissions for Number of Segments in a String.
Memory Usage: 6.1 MB, less than 55.27% of C++ online submissions for Number of Segments in a String.
